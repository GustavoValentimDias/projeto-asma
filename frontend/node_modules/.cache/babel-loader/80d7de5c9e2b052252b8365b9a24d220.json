{"ast":null,"code":"var _jsxFileName = \"/home/bernardo/Projects/projeto-asma/frontend/src/Pacientes/Dados.js\";\nimport React, { useState, useEffect } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport patientDataService from '../services/dataPatients.js';\n\nconst Dados = ({\n  id\n}) => {\n  const [linhas, setLinhas] = useState([]);\n  useEffect(() => {\n    let promises = [];\n    const quantidadeLinhas = 3;\n    const date = new Date();\n\n    for (let i = 0; i < quantidadeLinhas; i++) {\n      promises.push(patientDataService.getData(id, formatDate(date)));\n      date.setDate(date.getDate() - 1);\n    }\n\n    Promise.all(promises).then(responses => {\n      const date = new Date();\n\n      for (let i = 0; i < quantidadeLinhas; i++) {\n        const response = responses[i];\n        setLinhas(linhas => linhas.concat({\n          data: formatDate(date),\n          numPassos: response.summary.steps,\n          minutosAtivos: response.summary.fairlyActiveMinutes + response.summary.lightlyActiveMinutes + response.summary.veryActiveMinutes,\n          minutosSedentarios: response.summary.sedentaryMinutes\n        }));\n        date.setDate(date.getDate() - 1);\n      }\n    });\n  }, [id]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"border-right border-bottom border-left p-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Dados\"), /*#__PURE__*/React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Data\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"n\\xBA de passos\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"Horas ativas\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"Horas Sedentarias\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, linhas.map(linha => /*#__PURE__*/React.createElement(\"tr\", {\n    key: linha.data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, linha.data), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, linha.numPassos), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, linha.minutosAtivos / 60), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, linha.minutosSedentarios / 60))))));\n};\n\nconst formatDate = date => {\n  let month = '' + (date.getMonth() + 1);\n  let day = '' + date.getDate();\n  let year = date.getFullYear();\n  if (month.length < 2) month = '0' + month;\n  if (day.length < 2) day = '0' + day;\n  return [year, month, day].join('-');\n};\n\nexport default Dados;","map":{"version":3,"sources":["/home/bernardo/Projects/projeto-asma/frontend/src/Pacientes/Dados.js"],"names":["React","useState","useEffect","Table","patientDataService","Dados","id","linhas","setLinhas","promises","quantidadeLinhas","date","Date","i","push","getData","formatDate","setDate","getDate","Promise","all","then","responses","response","concat","data","numPassos","summary","steps","minutosAtivos","fairlyActiveMinutes","lightlyActiveMinutes","veryActiveMinutes","minutosSedentarios","sedentaryMinutes","map","linha","month","getMonth","day","year","getFullYear","length","join"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Table from 'react-bootstrap/Table'\nimport patientDataService from '../services/dataPatients.js'\n\nconst Dados = ({ id }) => {\n  const [ linhas, setLinhas ] = useState([])\n\n  useEffect(() => {\n    let promises = []\n    const quantidadeLinhas = 3\n\n    const date = new Date()\n    for (let i = 0; i < quantidadeLinhas; i++) {\n      promises.push(patientDataService.getData(id, formatDate(date)))      \n      date.setDate(date.getDate()-1)\n    }\n\n    Promise.all(promises)\n      .then(responses => {\n        const date = new Date()\n\n        for (let i = 0; i < quantidadeLinhas; i++) {\n          const response = responses[i]\n          \n          setLinhas(linhas => linhas.concat({\n            data: formatDate(date),\n            numPassos: response.summary.steps,\n            minutosAtivos: response.summary.fairlyActiveMinutes + response.summary.lightlyActiveMinutes + response.summary.veryActiveMinutes,\n            minutosSedentarios: response.summary.sedentaryMinutes\n          }))\n          date.setDate(date.getDate()-1)\n        }\n      })\n\n  }, [id])\n\n  return (\n    <div className=\"border-right border-bottom border-left p-3\">\n      <h4>Dados</h4>\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>Data</th>\n            <th>nยบ de passos</th>\n            <th>Horas ativas</th>\n            <th>Horas Sedentarias</th>\n          </tr>\n        </thead>\n        <tbody>\n          {linhas.map(linha => \n            <tr key={linha.data}>\n              <td>{linha.data}</td>\n              <td>{linha.numPassos}</td>\n              <td>{linha.minutosAtivos/60}</td>\n              <td>{linha.minutosSedentarios/60}</td>\n            </tr>\n          )}\n        </tbody>\n      </Table>\n    </div>\n  )\n}\n\nconst formatDate = date => {\n  let month = '' + (date.getMonth() + 1)\n  let day = '' + date.getDate()\n  let year = date.getFullYear()\n\n  if (month.length < 2) \n      month = '0' + month\n  if (day.length < 2) \n      day = '0' + day\n\n  return [year, month, day].join('-')\n}\n\nexport default Dados\n"]},"metadata":{},"sourceType":"module"}