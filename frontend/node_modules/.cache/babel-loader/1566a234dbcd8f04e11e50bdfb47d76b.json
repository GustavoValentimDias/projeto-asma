{"ast":null,"code":"import _slicedToArray from\"/home/bernardo/Projects/projeto-asma/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import Table from'react-bootstrap/Table';import patientDataService from'../services/dataPatients.js';var Dados=function Dados(_ref){var id=_ref.id;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),linhas=_useState2[0],setLinhas=_useState2[1];useEffect(function(){var promises=[];var quantidadeLinhas=5;var date=new Date();for(var i=0;i<quantidadeLinhas;i++){promises.push(patientDataService.getData(id,formatDate(date)));date.setDate(date.getDate()-1);}Promise.all(promises).then(function(responses){var date=new Date();var _loop=function _loop(_i){var response=responses[_i];setLinhas(function(linhas){return linhas.concat({data:formatDate(date),numPassos:response.summary.steps,minutosAtivos:response.summary.fairlyActiveMinutes+response.summary.lightlyActiveMinutes+response.summary.veryActiveMinutes,minutosSedentarios:response.summary.sedentaryMinutes});});date.setDate(date.getDate()-1);};for(var _i=0;_i<quantidadeLinhas;_i++){_loop(_i);}});},[id]);return/*#__PURE__*/React.createElement(\"div\",{className:\"border-right border-bottom border-left p-3\"},/*#__PURE__*/React.createElement(\"h4\",null,\"Dados\"),/*#__PURE__*/React.createElement(Table,{striped:true,bordered:true,hover:true},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Data\"),/*#__PURE__*/React.createElement(\"th\",null,\"n\\xBA de passos\"),/*#__PURE__*/React.createElement(\"th\",null,\"Horas ativas\"),/*#__PURE__*/React.createElement(\"th\",null,\"Horas Sedentarias\"))),/*#__PURE__*/React.createElement(\"tbody\",null,linhas.map(function(linha){return/*#__PURE__*/React.createElement(\"tr\",{key:linha.data},/*#__PURE__*/React.createElement(\"td\",null,linha.data),/*#__PURE__*/React.createElement(\"td\",null,linha.numPassos),/*#__PURE__*/React.createElement(\"td\",null,linha.minutosAtivos/60),/*#__PURE__*/React.createElement(\"td\",null,linha.minutosSedentarios/60));}))));};var formatDate=function formatDate(date){var month=''+(date.getMonth()+1);var day=''+date.getDate();var year=date.getFullYear();if(month.length<2)month='0'+month;if(day.length<2)day='0'+day;return[year,month,day].join('-');};export default Dados;","map":{"version":3,"sources":["/home/bernardo/Projects/projeto-asma/frontend/src/Pacientes/Dados.js"],"names":["React","useState","useEffect","Table","patientDataService","Dados","id","linhas","setLinhas","promises","quantidadeLinhas","date","Date","i","push","getData","formatDate","setDate","getDate","Promise","all","then","responses","response","concat","data","numPassos","summary","steps","minutosAtivos","fairlyActiveMinutes","lightlyActiveMinutes","veryActiveMinutes","minutosSedentarios","sedentaryMinutes","map","linha","month","getMonth","day","year","getFullYear","length","join"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Table from 'react-bootstrap/Table'\nimport patientDataService from '../services/dataPatients.js'\n\nconst Dados = ({ id }) => {\n  const [ linhas, setLinhas ] = useState([])\n\n  useEffect(() => {\n    let promises = []\n    const quantidadeLinhas = 5\n\n    const date = new Date()\n    for (let i = 0; i < quantidadeLinhas; i++) {\n      promises.push(patientDataService.getData(id, formatDate(date)))      \n      date.setDate(date.getDate()-1)\n    }\n\n    Promise.all(promises)\n      .then(responses => {\n        const date = new Date()\n\n        for (let i = 0; i < quantidadeLinhas; i++) {\n          const response = responses[i]\n\n          setLinhas(linhas => linhas.concat({\n            data: formatDate(date),\n            numPassos: response.summary.steps,\n            minutosAtivos: response.summary.fairlyActiveMinutes + response.summary.lightlyActiveMinutes + response.summary.veryActiveMinutes,\n            minutosSedentarios: response.summary.sedentaryMinutes\n          }))\n          date.setDate(date.getDate()-1)\n        }\n      })\n\n  }, [id])\n\n  return (\n    <div className=\"border-right border-bottom border-left p-3\">\n      <h4>Dados</h4>\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>Data</th>\n            <th>nÂº de passos</th>\n            <th>Horas ativas</th>\n            <th>Horas Sedentarias</th>\n          </tr>\n        </thead>\n        <tbody>\n          {linhas.map(linha => \n            <tr key={linha.data}>\n              <td>{linha.data}</td>\n              <td>{linha.numPassos}</td>\n              <td>{linha.minutosAtivos/60}</td>\n              <td>{linha.minutosSedentarios/60}</td>\n            </tr>\n          )}\n        </tbody>\n      </Table>\n    </div>\n  )\n}\n\nconst formatDate = date => {\n  let month = '' + (date.getMonth() + 1)\n  let day = '' + date.getDate()\n  let year = date.getFullYear()\n\n  if (month.length < 2) \n      month = '0' + month\n  if (day.length < 2) \n      day = '0' + day\n\n  return [year, month, day].join('-')\n}\n\nexport default Dados\n"]},"metadata":{},"sourceType":"module"}