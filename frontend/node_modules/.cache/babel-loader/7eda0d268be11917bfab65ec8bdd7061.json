{"ast":null,"code":"var _jsxFileName = \"/home/bernardo/Projects/projeto-asma/frontend/src/Pacientes/Dados.js\";\nimport React, { useState, useEffect } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport patientDataService from '../services/dataPatients.js';\n\nconst Dados = ({\n  id\n}) => {\n  const [linhas, setLinhas] = useState([]);\n  useEffect(() => {\n    const date = new Date();\n\n    for (let i = 0; i < 3; i++) {\n      patientDataService.getData(id, formatDate(date)).then(response => setLinhas(linhas => linhas.concat({\n        data: date,\n        numPassos: response.summary.steps,\n        minutosAtivos: response.summary.fairlyActiveMinutes + response.summary.lightlyActiveMinutes + response.summary.veryActiveMinutes,\n        minutosSedentarios: response.summary.sedentaryMinutes\n      })));\n      date.setDate(date.getDate() - 1);\n    }\n  }, [id]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"border-right border-bottom border-left p-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"Dados\"), /*#__PURE__*/React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"Data\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"n\\xBA de passos\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"Horas ativas\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"Horas Sedentarias\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, linhas.map(linha => /*#__PURE__*/React.createElement(\"tr\", {\n    key: linha.data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, `${linha.data.getDate()}/${linha.data.getMonth() + 1}`), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }, linha.numPassos), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }, linha.minutosAtivos / 60), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, linha.minutosSedentarios / 60))))));\n};\n\nconst formatDate = date => {\n  let month = '' + (date.getMonth() + 1);\n  let day = '' + date.getDate();\n  let year = date.getFullYear();\n  if (month.length < 2) month = '0' + month;\n  if (day.length < 2) day = '0' + day;\n  return [year, month, day].join('-');\n};\n\nexport default Dados;","map":{"version":3,"sources":["/home/bernardo/Projects/projeto-asma/frontend/src/Pacientes/Dados.js"],"names":["React","useState","useEffect","Table","patientDataService","Dados","id","linhas","setLinhas","date","Date","i","getData","formatDate","then","response","concat","data","numPassos","summary","steps","minutosAtivos","fairlyActiveMinutes","lightlyActiveMinutes","veryActiveMinutes","minutosSedentarios","sedentaryMinutes","setDate","getDate","map","linha","getMonth","month","day","year","getFullYear","length","join"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,kBAAP,MAA+B,6BAA/B;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAY;AACxB,QAAM,CAAEC,MAAF,EAAUC,SAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,IAAI,GAAG,IAAIC,IAAJ,EAAb;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BP,MAAAA,kBAAkB,CAACQ,OAAnB,CAA2BN,EAA3B,EAA+BO,UAAU,CAACJ,IAAD,CAAzC,EACGK,IADH,CACQC,QAAQ,IAAIP,SAAS,CAACD,MAAM,IAAIA,MAAM,CAACS,MAAP,CAAc;AAClDC,QAAAA,IAAI,EAAER,IAD4C;AAElDS,QAAAA,SAAS,EAAEH,QAAQ,CAACI,OAAT,CAAiBC,KAFsB;AAGlDC,QAAAA,aAAa,EAAEN,QAAQ,CAACI,OAAT,CAAiBG,mBAAjB,GAAuCP,QAAQ,CAACI,OAAT,CAAiBI,oBAAxD,GAA+ER,QAAQ,CAACI,OAAT,CAAiBK,iBAH7D;AAIlDC,QAAAA,kBAAkB,EAAEV,QAAQ,CAACI,OAAT,CAAiBO;AAJa,OAAd,CAAX,CAD7B;AAQAjB,MAAAA,IAAI,CAACkB,OAAL,CAAalB,IAAI,CAACmB,OAAL,KAAe,CAA5B;AACC;AAEJ,GAfQ,EAeN,CAACtB,EAAD,CAfM,CAAT;AAiBA,sBACE;AAAK,IAAA,SAAS,EAAC,4CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,oBAAC,KAAD;AAAO,IAAA,OAAO,MAAd;AAAe,IAAA,QAAQ,MAAvB;AAAwB,IAAA,KAAK,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJF,CADF,CADF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,MAAM,CAACsB,GAAP,CAAWC,KAAK,iBACf;AAAI,IAAA,GAAG,EAAEA,KAAK,CAACb,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM,GAAEa,KAAK,CAACb,IAAN,CAAWW,OAAX,EAAqB,IAAGE,KAAK,CAACb,IAAN,CAAWc,QAAX,KAAsB,CAAE,EAAxD,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,KAAK,CAACZ,SAAX,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKY,KAAK,CAACT,aAAN,GAAoB,EAAzB,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKS,KAAK,CAACL,kBAAN,GAAyB,EAA9B,CAJF,CADD,CADH,CATF,CAFF,CADF;AAyBD,CA7CD;;AA+CA,MAAMZ,UAAU,GAAGJ,IAAI,IAAI;AACzB,MAAIuB,KAAK,GAAG,MAAMvB,IAAI,CAACsB,QAAL,KAAkB,CAAxB,CAAZ;AACA,MAAIE,GAAG,GAAG,KAAKxB,IAAI,CAACmB,OAAL,EAAf;AACA,MAAIM,IAAI,GAAGzB,IAAI,CAAC0B,WAAL,EAAX;AAEA,MAAIH,KAAK,CAACI,MAAN,GAAe,CAAnB,EACIJ,KAAK,GAAG,MAAMA,KAAd;AACJ,MAAIC,GAAG,CAACG,MAAJ,GAAa,CAAjB,EACIH,GAAG,GAAG,MAAMA,GAAZ;AAEJ,SAAO,CAACC,IAAD,EAAOF,KAAP,EAAcC,GAAd,EAAmBI,IAAnB,CAAwB,GAAxB,CAAP;AACD,CAXD;;AAaA,eAAehC,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Table from 'react-bootstrap/Table'\nimport patientDataService from '../services/dataPatients.js'\n\nconst Dados = ({ id }) => {\n  const [ linhas, setLinhas ] = useState([])\n\n  useEffect(() => {\n    const date = new Date()\n    \n    for (let i = 0; i < 3; i++) {\n      patientDataService.getData(id, formatDate(date))\n        .then(response => setLinhas(linhas => linhas.concat({\n          data: date,\n          numPassos: response.summary.steps,\n          minutosAtivos: response.summary.fairlyActiveMinutes + response.summary.lightlyActiveMinutes + response.summary.veryActiveMinutes,\n          minutosSedentarios: response.summary.sedentaryMinutes\n        })))\n      \n      date.setDate(date.getDate()-1)\n      }\n\n  }, [id])\n\n  return (\n    <div className=\"border-right border-bottom border-left p-3\">\n      <h4>Dados</h4>\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>Data</th>\n            <th>nยบ de passos</th>\n            <th>Horas ativas</th>\n            <th>Horas Sedentarias</th>\n          </tr>\n        </thead>\n        <tbody>\n          {linhas.map(linha => \n            <tr key={linha.data}>\n              <td>{`${linha.data.getDate()}/${linha.data.getMonth()+1}`}</td>\n              <td>{linha.numPassos}</td>\n              <td>{linha.minutosAtivos/60}</td>\n              <td>{linha.minutosSedentarios/60}</td>\n            </tr>\n          )}\n        </tbody>\n      </Table>\n    </div>\n  )\n}\n\nconst formatDate = date => {\n  let month = '' + (date.getMonth() + 1)\n  let day = '' + date.getDate()\n  let year = date.getFullYear()\n\n  if (month.length < 2) \n      month = '0' + month\n  if (day.length < 2) \n      day = '0' + day\n\n  return [year, month, day].join('-')\n}\n\nexport default Dados\n"]},"metadata":{},"sourceType":"module"}