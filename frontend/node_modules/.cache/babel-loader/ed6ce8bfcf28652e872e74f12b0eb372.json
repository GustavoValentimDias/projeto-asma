{"ast":null,"code":"import _slicedToArray from\"/home/bernardo/Projects/projeto-asma/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import patientService from'./services/patients.js';var App=function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),patients=_useState2[0],setPatients=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),newName=_useState4[0],setNewName=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),newPhone=_useState6[0],setNewPhone=_useState6[1];patientService.getAll().then(function(response){return setPatients(response);});var handleSubmit=function handleSubmit(event){event.preventDefault();var foundPatient=patients.find(function(person){return person.name===newName;});if(foundPatient===undefined){setPatients(patients.concat({name:newName,phone:newPhone}));setNewPhone('');setNewName('');}else{alert('Pessoa já adicionada');}};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,\"Pacientes\"),/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(\"div\",null,\"Nome: \",/*#__PURE__*/React.createElement(\"input\",{value:newName,onChange:function onChange(event){return setNewName(event.target.value);}})),/*#__PURE__*/React.createElement(\"div\",null,\"Telefone: \",/*#__PURE__*/React.createElement(\"input\",{value:newPhone,onChange:function onChange(event){return setNewPhone(event.target.value);}})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{type:\"submit\"},\"Adicionar\"))),/*#__PURE__*/React.createElement(\"ul\",null,patients.map(function(patient){return/*#__PURE__*/React.createElement(\"li\",{key:patient.name},patient.name,\" \",patient.phone);})));};export default App;","map":{"version":3,"sources":["/home/bernardo/Projects/projeto-asma/frontend/src/App.js"],"names":["React","useState","patientService","App","patients","setPatients","newName","setNewName","newPhone","setNewPhone","getAll","then","response","handleSubmit","event","preventDefault","foundPatient","find","person","name","undefined","concat","phone","alert","target","value","map","patient"],"mappings":"oKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,cAAP,KAA2B,wBAA3B,CAEA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,eACkBF,QAAQ,CAAC,EAAD,CAD1B,wCACRG,QADQ,eACEC,WADF,8BAEgBJ,QAAQ,CAAC,EAAD,CAFxB,yCAERK,OAFQ,eAECC,UAFD,8BAGkBN,QAAQ,CAAC,EAAD,CAH1B,yCAGRO,QAHQ,eAGEC,WAHF,eAKhBP,cAAc,CAACQ,MAAf,GAAwBC,IAAxB,CAA6B,SAAAC,QAAQ,QAAIP,CAAAA,WAAW,CAACO,QAAD,CAAf,EAArC,EAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,KAAK,CAAI,CAC5BA,KAAK,CAACC,cAAN,GAEA,GAAMC,CAAAA,YAAY,CAAGZ,QAAQ,CAACa,IAAT,CAAc,SAAAC,MAAM,QAAIA,CAAAA,MAAM,CAACC,IAAP,GAAgBb,OAApB,EAApB,CAArB,CACA,GAAIU,YAAY,GAAKI,SAArB,CAAgC,CAC9Bf,WAAW,CAACD,QAAQ,CAACiB,MAAT,CAAgB,CAAEF,IAAI,CAAEb,OAAR,CAAiBgB,KAAK,CAAEd,QAAxB,CAAhB,CAAD,CAAX,CACAC,WAAW,CAAC,EAAD,CAAX,CACAF,UAAU,CAAC,EAAD,CAAV,CACD,CAJD,IAIO,CACLgB,KAAK,CAAC,sBAAD,CAAL,CACD,CACF,CAXD,CAaA,mBACE,4CACE,0CADF,cAEE,4BAAM,QAAQ,CAAEV,YAAhB,eACE,qDACQ,6BAAO,KAAK,CAAEP,OAAd,CAAuB,QAAQ,CAAE,kBAAAQ,KAAK,QAAIP,CAAAA,UAAU,CAACO,KAAK,CAACU,MAAN,CAAaC,KAAd,CAAd,EAAtC,EADR,CADF,cAIE,yDACY,6BAAO,KAAK,CAAEjB,QAAd,CAAwB,QAAQ,CAAE,kBAAAM,KAAK,QAAIL,CAAAA,WAAW,CAACK,KAAK,CAACU,MAAN,CAAaC,KAAd,CAAf,EAAvC,EADZ,CAJF,cAOE,4CACE,8BAAQ,IAAI,CAAC,QAAb,cADF,CAPF,CAFF,cAaE,8BACGrB,QAAQ,CAACsB,GAAT,CAAa,SAAAC,OAAO,qBACnB,0BAAI,GAAG,CAAEA,OAAO,CAACR,IAAjB,EAAwBQ,OAAO,CAACR,IAAhC,KAAuCQ,OAAO,CAACL,KAA/C,CADmB,EAApB,CADH,CAbF,CADF,CAqBD,CAzCD,CA2CA,cAAenB,CAAAA,GAAf","sourcesContent":["import React, { useState } from 'react'\nimport patientService from './services/patients.js'\n\nconst App = () => {\n  const [ patients, setPatients ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newPhone, setNewPhone ] = useState('')\n\n  patientService.getAll().then(response => setPatients(response))\n  \n  const handleSubmit = event => {\n    event.preventDefault()\n\n    const foundPatient = patients.find(person => person.name === newName)\n    if (foundPatient === undefined) {\n      setPatients(patients.concat({ name: newName, phone: newPhone }))\n      setNewPhone('')\n      setNewName('')\n    } else {\n      alert('Pessoa já adicionada')\n    }\n  }\n\n  return (\n    <div>\n      <h1>Pacientes</h1>\n      <form onSubmit={handleSubmit}>\n        <div>\n          Nome: <input value={newName} onChange={event => setNewName(event.target.value)} />\n        </div>\n        <div>\n          Telefone: <input value={newPhone} onChange={event => setNewPhone(event.target.value)} />\n        </div>\n        <div>\n          <button type=\"submit\">Adicionar</button>\n        </div>\n      </form>\n      <ul>\n        {patients.map(patient => \n          <li key={patient.name}>{patient.name} {patient.phone}</li>\n        )}\n      </ul>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}